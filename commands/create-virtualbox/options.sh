# Generated by stubbs:add-option. Do not edit, if using stubbs.
# Created: Tue Aug  4 12:16:54 PDT 2015
#
#/ usage: docker-machine:create-virtualbox  --name <>  --docker-cert-path <${DOCKER_CERT_PATH:-}>  --docker-host <${DOCKER_HOST:-}>  --docker-tls-verify <${DOCKER_TLS_VERIFY:-}> [ --virtualbox-memory <>] [ --virtualbox-cpu-count <>] [ --virtualbox-disk-size <>] [ --virtualbox-boot2docker-url <>] [ --virtualbox-import-boot2docker-vm <>] [ --virtualbox-hostonly-cidr <>] [ --engine-label <>] [ --engine-opt <>] [ --engine-insecure-registry <>] [ --engine-registry-mirror <>] [ --engine-storage-driver <>] [ --swarm <>] [ --swarm-master <>] [ --swarm-discovery <>] [ --swarm-host <>] [ --swarm-addr <>]  --machine-storage-path <${MACHINE_STORAGE_PATH:-}> 

# _rerun_options_parse_ - Parse the command arguments and set option variables.
#
#     rerun_options_parse "$@"
#
# Arguments:
#
# * the command options and their arguments
#
# Notes:
# 
# * Sets shell variables for any parsed options.
# * The "-?" help argument prints command usage and will exit 2.
# * Return 0 for successful option parse.
#
rerun_options_parse() {

    while [ "$#" -gt 0 ]; do
        OPT="$1"
        case "$OPT" in
            --name) rerun_option_check $# $1; NAME=$2 ; shift ;;
            --docker-cert-path) rerun_option_check $# $1; DOCKER_CERT_PATH=$2 ; shift ;;
            --docker-host) rerun_option_check $# $1; DOCKER_HOST=$2 ; shift ;;
            --docker-tls-verify) rerun_option_check $# $1; DOCKER_TLS_VERIFY=$2 ; shift ;;
            --virtualbox-memory) rerun_option_check $# $1; VIRTUALBOX_MEMORY=$2 ; shift ;;
            --virtualbox-cpu-count) rerun_option_check $# $1; VIRTUALBOX_CPU_COUNT=$2 ; shift ;;
            --virtualbox-disk-size) rerun_option_check $# $1; VIRTUALBOX_DISK_SIZE=$2 ; shift ;;
            --virtualbox-boot2docker-url) rerun_option_check $# $1; VIRTUALBOX_BOOT2DOCKER_URL=$2 ; shift ;;
            --virtualbox-import-boot2docker-vm) rerun_option_check $# $1; VIRTUALBOX_IMPORT_BOOT2DOCKER_VM=$2 ; shift ;;
            --virtualbox-hostonly-cidr) rerun_option_check $# $1; VIRTUALBOX_HOSTONLY_CIDR=$2 ; shift ;;
            --engine-label) rerun_option_check $# $1; ENGINE_LABEL=$2 ; shift ;;
            --engine-opt) rerun_option_check $# $1; ENGINE_OPT=$2 ; shift ;;
            --engine-insecure-registry) rerun_option_check $# $1; ENGINE_INSECURE_REGISTRY=$2 ; shift ;;
            --engine-registry-mirror) rerun_option_check $# $1; ENGINE_REGISTRY_MIRROR=$2 ; shift ;;
            --engine-storage-driver) rerun_option_check $# $1; ENGINE_STORAGE_DRIVER=$2 ; shift ;;
            --swarm) rerun_option_check $# $1; SWARM=$2 ; shift ;;
            --swarm-master) rerun_option_check $# $1; SWARM_MASTER=$2 ; shift ;;
            --swarm-discovery) rerun_option_check $# $1; SWARM_DISCOVERY=$2 ; shift ;;
            --swarm-host) rerun_option_check $# $1; SWARM_HOST=$2 ; shift ;;
            --swarm-addr) rerun_option_check $# $1; SWARM_ADDR=$2 ; shift ;;
            --machine-storage-path) rerun_option_check $# $1; MACHINE_STORAGE_PATH=$2 ; shift ;;
            # help option
            -|--*?)
                rerun_option_usage
                exit 2
                ;;
            # end of options, just arguments left
            *)
              break
        esac
        shift
    done

    # Set defaultable options.
    [ -z "$DOCKER_CERT_PATH" ] && DOCKER_CERT_PATH="$(rerun_property_get $RERUN_MODULE_DIR/options/docker-cert-path DEFAULT)"
    [ -z "$DOCKER_HOST" ] && DOCKER_HOST="$(rerun_property_get $RERUN_MODULE_DIR/options/docker-host DEFAULT)"
    [ -z "$DOCKER_TLS_VERIFY" ] && DOCKER_TLS_VERIFY="$(rerun_property_get $RERUN_MODULE_DIR/options/docker-tls-verify DEFAULT)"
    # Check required options are set
    [ -z "$NAME" ] && { echo >&2 "missing required option: --name" ; return 2 ; }
    [ -z "$DOCKER_CERT_PATH" ] && { echo >&2 "missing required option: --docker-cert-path" ; return 2 ; }
    [ -z "$DOCKER_HOST" ] && { echo >&2 "missing required option: --docker-host" ; return 2 ; }
    [ -z "$DOCKER_TLS_VERIFY" ] && { echo >&2 "missing required option: --docker-tls-verify" ; return 2 ; }
    [ -z "$MACHINE_STORAGE_PATH" ] && { echo >&2 "missing required option: --machine-storage-path" ; return 2 ; }
    # If option variables are declared exportable, export them.
    export DOCKER_CERT_PATH
    export DOCKER_HOST
    export DOCKER_TLS_VERIFY
    export VIRTUALBOX_DISK_SIZE
    export MACHINE_STORAGE_PATH
    #
    return 0
}


# If not already set, initialize the options variables to null.
: ${NAME:=}
: ${DOCKER_CERT_PATH:=}
: ${DOCKER_HOST:=}
: ${DOCKER_TLS_VERIFY:=}
: ${VIRTUALBOX_MEMORY:=}
: ${VIRTUALBOX_CPU_COUNT:=}
: ${VIRTUALBOX_DISK_SIZE:=}
: ${VIRTUALBOX_BOOT2DOCKER_URL:=}
: ${VIRTUALBOX_IMPORT_BOOT2DOCKER_VM:=}
: ${VIRTUALBOX_HOSTONLY_CIDR:=}
: ${ENGINE_LABEL:=}
: ${ENGINE_OPT:=}
: ${ENGINE_INSECURE_REGISTRY:=}
: ${ENGINE_REGISTRY_MIRROR:=}
: ${ENGINE_STORAGE_DRIVER:=}
: ${SWARM:=}
: ${SWARM_MASTER:=}
: ${SWARM_DISCOVERY:=}
: ${SWARM_HOST:=}
: ${SWARM_ADDR:=}
: ${MACHINE_STORAGE_PATH:=}


